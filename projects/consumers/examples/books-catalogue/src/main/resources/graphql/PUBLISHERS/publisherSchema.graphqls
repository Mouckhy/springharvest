extend type Query {
    # Query to get a list of publishers based on the search input
    publishers(input: PublisherSearchInput = {name: "", page: 0, size: 20, sortOrder: "name", sortDirection: "D"}): [Publisher]
    # Query to get a publisher by their ID
    publisherById(id: ID!): Publisher
}

# The Publisher type represents a publisher in the system
type Publisher implements BaseEntity{
    id: ID! # The unique ID of the publisher
    name: String! # The name of the publisher
    traceData: TraceData # Trace data for the publisher
}

# The PublisherSearchInput is used to filter the publishers query
input PublisherSearchInput{
    name: String # The name of the publisher to search for
    page: Int # The page number for pagination
    size: Int # The number of publishers to return per page
    sortOrder: String # The field to sort the publishers by
    sortDirection: String # The direction to sort the publishers in
}

# The PublisherFilter is used to filter publishers by various conditions
input PublisherFilter{
    name: StringExpression # The name condition to filter publishers by
    not: PublisherFilter # The conditions to exclude publishers by
}